#!/usr/bin/env bash

set -euo pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

ERR=$(mktemp)

exec 2>$ERR

uhoh() {
    echo "
It looks like this script failed to complete. Sorry about that. :(

Depending on exactly what failed, more information may be available in:
$ERR

Note: the most likely issue is that you don't have read access to Artifactory
repositories. Check if you can see the \"assembly\" repo through the UI; if
not, ask for access on Slack. Known Artifactory admins at time of writing:
@gary, @brian, @edward.
"
}

trap uhoh EXIT

display_help() {
    cat <<EOF
Usage:

$(basename $0) list canton
      Lists available Canton builds on Artifactory.

$(basename $0) list daml
      Lists available Daml SDK builds on Artifactory.

$(basename $0) use <canton-version>
      Given a canton version, tells which version of the sdk it uses.

Any other invocation will display this help message.

Note: You need the ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD env vars set
to use this script. See README for how to set them using .envrc.private.
EOF
}

list() (
    repo=$1
    curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD \
         https://digitalasset.jfrog.io/artifactory/api/storage/assembly/$repo \
         --fail \
         --location \
         --silent \
      | jq -r '.children[].uri' \
      | sed -e 's/^\///' \
      | grep -P '^\d+\.\d+\.\d+' \
      | sort -V
)

fetch() (
    path=$1
    curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD \
         https://digitalasset.jfrog.io/artifactory/assembly/$path \
         --fail \
         --location \
         --silent
)

use() (
    canton=$1
    daml=$(fetch canton/$canton/info.json | jq -r '.daml_version')
    echo "canton: $canton"
    echo "daml: $daml"
)

if [ -z "${1+x}" ]; then
    display_help
else
    case $1 in
        list)
            if [ -z "${2+x}" ]; then
                display_help
            else
                if [ "$2" != canton ] && [ "$2" != daml ]; then
                    display_help
                else
                    list $2
                fi
            fi
        ;;
        use)
            if [ -z "${2+x}" ]; then
                display_help
            else
                if [ -z "${3+x}" ]; then
                    use $2
                else
                    display_help
                fi
            fi
        ;;
        *)
            display_help
        ;;
    esac
fi

trap - EXIT
