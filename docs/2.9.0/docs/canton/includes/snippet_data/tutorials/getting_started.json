{
  "533" : {
    "command" : "val acceptOffer = ledger_api_utils.exercise(\"AcceptByOwner\", Map(\"iouId\" -> LfContractId.assertFromString(aliceIou.event.contractId)),paintOffer.event)",
    "output" : "acceptOffer : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Exercise(\n    value = ExerciseCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n.."
  },
  "288" : {
    "command" : "mydomain.parties.list(\"Bob\")",
    "output" : "res18: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Bob::12208835968c...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant2::12208835968c...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::1220188e5f51..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "302" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : ".."
  },
  "371" : {
    "command" : "participant2.dars.list()",
    "output" : "res31: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"1220a2315a854212d3e10eac7e1de25e3d0b032df22331cf9d68164d078d2fa07428\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"1220afa775e61897c880b1624ada6b56d967693fff52a5a4b247b2fb0f10bdd87426\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "73" : {
    "command" : "Seq(1,2,3).map(_ * 2)",
    "output" : "res1: Seq[Int] = List(2, 4, 6)"
  },
  "513" : {
    "command" : "",
    "output" : ""
  },
  "271" : {
    "command" : "",
    "output" : ""
  },
  "282" : {
    "command" : "",
    "output" : ""
  },
  "175" : {
    "command" : "participant1.health.status",
    "output" : "res6: com.digitalasset.canton.health.admin.data.NodeStatus[com.digitalasset.canton.health.admin.data.ParticipantStatus] = Participant id: PAR::participant1::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\nUptime: 5.073082s\nPorts: \n\tledger: 33454\n\tadmin: 33455\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "365" : {
    "command" : "participant1.dars.list()",
    "output" : "res30: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"1220a2315a854212d3e10eac7e1de25e3d0b032df22331cf9d68164d078d2fa07428\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"1220afa775e61897c880b1624ada6b56d967693fff52a5a4b247b2fb0f10bdd87426\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "518" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res45: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  ),\n  (\n    TemplateId(\n      packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"houseOwner\" -> \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\",\n      \"bank\" -> \"Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "352" : {
    "command" : "nodes.local",
    "output" : "res28: Seq[com.digitalasset.canton.console.LocalInstanceReferenceCommon] = ArraySeq(Participant 'participant1', Participant 'participant2', Domain 'mydomain')"
  },
  "170" : {
    "command" : "health.status",
    "output" : "res5: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::1220188e5f512c26d3c8332b43324f172569aa25d459079a066ae999e5c7729a70db\nUptime: 6.323202s\nPorts: \n\tadmin: 33459\n\tpublic: 33458\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\nStatus for Participant 'participant1':\nParticipant id: PAR::participant1::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\nUptime: 4.899557s\nPorts: \n\tledger: 33454\n\tadmin: 33455\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized\n\nStatus for Participant 'participant2':\nParticipant id: PAR::participant2::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\nUptime: 4.537851s\nPorts: \n\tledger: 33456\n\tadmin: 33457\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "269" : {
    "command" : "",
    "output" : ""
  },
  "372" : {
    "command" : "",
    "output" : ""
  },
  "357" : {
    "command" : "participants.all",
    "output" : "res29: Seq[com.digitalasset.canton.console.ParticipantReference] = List(Participant 'participant1', Participant 'participant2')"
  },
  "196" : {
    "command" : "participant1.domains.connect_local(mydomain)",
    "output" : ""
  },
  "289" : {
    "command" : "",
    "output" : ""
  },
  "448" : {
    "command" : "participant2.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "res35: com.daml.ledger.api.v1.transaction.TransactionTree = TransactionTree(\n  transactionId = \"12209f801e2ad983973540c36855c34c1a6b287ae0df73a55fc15aca6de4deb80dae\",\n  commandId = \"9cf4faba-de9d-4c2f-b41b-cb7843e20465\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n      seconds = 1706002886L,\n      nanos = 621421000,\n      unknownFields = UnknownFieldSet(fields = Map())\n    )\n  ),\n  offset = \"000000000000000015\",\n.."
  },
  "492" : {
    "command" : "val createOfferCmd = ledger_api_utils.create(pkgPaint.packageId, \"Paint\", \"OfferToPaintHouseByPainter\", Map(\"bank\" -> bank, \"houseOwner\" -> alice, \"painter\" -> bob, \"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\")))",
    "output" : "createOfferCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n.."
  },
  "443" : {
    "command" : "val createIouCmd = ledger_api_utils.create(pkgIou.packageId,\"Iou\",\"Iou\",Map(\"payer\" -> bank,\"owner\" -> alice,\"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\"),\"viewers\" -> List()))",
    "output" : "createIouCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n.."
  },
  "211" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : "res11: Duration = 547 milliseconds"
  },
  "238" : {
    "command" : "mydomain.id",
    "output" : "res12: DomainId = mydomain::1220188e5f51..."
  },
  "280" : {
    "command" : "",
    "output" : ""
  },
  "507" : {
    "command" : "",
    "output" : ""
  },
  "312" : {
    "command" : "val p2Id = ParticipantId.tryFromProtoPrimitive(extractedId)",
    "output" : "p2Id : ParticipantId = PAR::participant2::12208835968c..."
  },
  "74" : {
    "command" : "",
    "output" : ""
  },
  "307" : {
    "command" : "val extractedId = participant2.id.toProtoPrimitive",
    "output" : "extractedId : String = \"PAR::participant2::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\""
  },
  "512" : {
    "command" : "participant2.ledger_api.acs.of_party(bank).map(x => (x.templateId, x.arguments))",
    "output" : "res44: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "270" : {
    "command" : "val bob = participant2.parties.enable(\"Bob\")",
    "output" : "bob : PartyId = Bob::12208835968c..."
  },
  "366" : {
    "command" : "",
    "output" : ""
  },
  "534" : {
    "command" : "participant1.ledger_api.commands.submit_flat(Seq(alice), Seq(acceptOffer))",
    "output" : "res48: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"12205bcf44ea704d4615d5d53e59fadcbf19487488f13684b02b684d3af8ff5dd68c\",\n  commandId = \"3c8df150-17f0-4775-a1a6-0281f578d393\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "102" : {
    "command" : "help",
    "output" : "Top-level Commands\n------------------\nexit - Leave the console\nhelp - Help with console commands; type help(\"<command>\") for detailed help for <command>\n\nGeneric Node References\n-----------------------\ndomainManagers - All domain manager nodes (.all, .local, .remote)\n.."
  },
  "197" : {
    "command" : "",
    "output" : ""
  },
  "493" : {
    "command" : "participant2.ledger_api.commands.submit_flat(Seq(bob), Seq(createOfferCmd))",
    "output" : "res41: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"1220fbc033ae5accedcf71653dcdffea4adda2a7617e2749d196bdf4a2650cff17bb\",\n  commandId = \"1810f2b4-6b90-4e9b-a8b7-bef79156af4c\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "324" : {
    "command" : "",
    "output" : ""
  },
  "519" : {
    "command" : "",
    "output" : ""
  },
  "317" : {
    "command" : "participant1.health.ping(p2Id)",
    "output" : "res22: Duration = 467 milliseconds"
  },
  "176" : {
    "command" : "",
    "output" : ""
  },
  "281" : {
    "command" : "mydomain.parties.list(\"Alice\")",
    "output" : "res17: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Alice::12208f4771dd...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant1::12208f4771dd...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::1220188e5f51..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "204" : {
    "command" : "health.status",
    "output" : "res10: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::1220188e5f512c26d3c8332b43324f172569aa25d459079a066ae999e5c7729a70db\nUptime: 9.567511s\nPorts: \n\tadmin: 33459\n\tpublic: 33458\nConnected Participants: \n\tPAR::participant2::12208835968c...\n\tPAR::participant1::12208f4771dd...\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\n.."
  },
  "498" : {
    "command" : "val paintOffer = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Paint\", \"OfferToPaintHouseByPainter\"))",
    "output" : "paintOffer : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#1220fbc033ae5accedcf71653dcdffea4adda2a7617e2749d196bdf4a2650cff17bb:0\",\n    contractId = \"00b7af7e73086358992daaa94cb22250787e875aebf5c4a44dbf7073e32c82b5c4ca0212209f5a7a127ecfaae12ad0cd346de053cbeaa38c73e694c26c0d5d1d149211997c\",\n    templateId = Some(\n      value = Identifier(\n.."
  },
  "181" : {
    "command" : "mydomain.health.status",
    "output" : "res7: com.digitalasset.canton.health.admin.data.NodeStatus[mydomain.Status] = Domain id: mydomain::1220188e5f512c26d3c8332b43324f172569aa25d459079a066ae999e5c7729a70db\nUptime: 6.666077s\nPorts: \n\tadmin: 33459\n\tpublic: 33458\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()"
  },
  "477" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res38: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "323" : {
    "command" : "val aliceParsed = PartyId.tryFromProtoPrimitive(aliceAsStr)",
    "output" : "aliceParsed : PartyId = Alice::12208f4771dd..."
  },
  "483" : {
    "command" : "val pkgPaint = participant1.packages.find(\"Paint\").head",
    "output" : "pkgPaint : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "240" : {
    "command" : "participant2.id",
    "output" : "res14: ParticipantId = PAR::participant2::12208835968c..."
  },
  "198" : {
    "command" : "participant2.domains.connect_local(mydomain)",
    "output" : ""
  },
  "108" : {
    "command" : "participant1.help(\"start\")",
    "output" : "start\nStart the instance"
  },
  "330" : {
    "command" : "val p2UidString = participant2.id.uid.toProtoPrimitive",
    "output" : "p2UidString : String = \"participant2::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\""
  },
  "394" : {
    "command" : "val bank = participant2.parties.enable(\"Bank\", waitForDomain = DomainChoice.All)",
    "output" : "bank : PartyId = Bank::12208835968c..."
  },
  "438" : {
    "command" : "val pkgIou = participant1.packages.find(\"Iou\").head",
    "output" : "pkgIou : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "199" : {
    "command" : "",
    "output" : ""
  },
  "182" : {
    "command" : "",
    "output" : ""
  },
  "331" : {
    "command" : "val p2FromUid = ParticipantId(UniqueIdentifier.tryFromProtoPrimitive(p2UidString))",
    "output" : "p2FromUid : ParticipantId = PAR::participant2::12208835968c..."
  },
  "346" : {
    "command" : "participants.all.dars.upload(\"dars/CantonExamples.dar\")",
    "output" : "res27: Map[com.digitalasset.canton.console.ParticipantReference, String] = Map(\n  Participant 'participant1' -> \"1220a2315a854212d3e10eac7e1de25e3d0b032df22331cf9d68164d078d2fa07428\",\n  Participant 'participant2' -> \"1220a2315a854212d3e10eac7e1de25e3d0b032df22331cf9d68164d078d2fa07428\"\n)"
  },
  "287" : {
    "command" : "",
    "output" : ""
  },
  "210" : {
    "command" : "",
    "output" : ""
  },
  "107" : {
    "command" : "help(\"participant1\")",
    "output" : "participant1\nManage participant 'participant1'; type 'participant1 help' or 'participant1 help(\"<methodName>\")' for more help"
  },
  "239" : {
    "command" : "participant1.id",
    "output" : "res13: ParticipantId = PAR::participant1::12208f4771dd..."
  },
  "532" : {
    "command" : "import com.digitalasset.canton.protocol.LfContractId",
    "output" : ""
  },
  "506" : {
    "command" : "participant2.ledger_api.acs.of_party(bob).map(x => (x.templateId, x.arguments))",
    "output" : "res43: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"houseOwner\" -> \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\",\n      \"bank\" -> \"Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "268" : {
    "command" : "val alice = participant1.parties.enable(\"Alice\")",
    "output" : "alice : PartyId = Alice::12208f4771dd..."
  },
  "464" : {
    "command" : "val aliceIou = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Iou\", \"Iou\"))",
    "output" : "aliceIou : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#12209f801e2ad983973540c36855c34c1a6b287ae0df73a55fc15aca6de4deb80dae:0\",\n    contractId = \"002270bfbfa2fa323a06fe503f79d5348d39198bfe3dedf08b32436c771b4c6b11ca0212203722a9fc612eec116727029b04f0fc4b417ded5a74c8338533c90eaa9b1f4979\",\n.."
  },
  "459" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcRequestRefusedByServer: NOT_FOUND/NO_DOMAIN_ON_WHICH_ALL_SUBMITTERS_CAN_SUBMIT(11,36ddd5a1): This participant can not submit as the given submitter on any connected domain\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Bank::12208835968c...,\n.."
  },
  "322" : {
    "command" : "val aliceAsStr = alice.toProtoPrimitive",
    "output" : "aliceAsStr : String = \"Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed\""
  },
  "469" : {
    "command" : "participant1.ledger_api.acs.of_party(alice)",
    "output" : "res37: Seq[com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent] = List(\n  WrappedCreatedEvent(\n    event = CreatedEvent(\n      eventId = \"#12209f801e2ad983973540c36855c34c1a6b287ae0df73a55fc15aca6de4deb80dae:0\",\n      contractId = \"002270bfbfa2fa323a06fe503f79d5348d39198bfe3dedf08b32436c771b4c6b11ca0212203722a9fc612eec116727029b04f0fc4b417ded5a74c8338533c90eaa9b1f4979\",\n      templateId = Some(\n        value = Identifier(\n          packageId = \"6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610\",\n.."
  },
  "454" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(alice), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcClientError: INVALID_ARGUMENT/DAML_AUTHORIZATION_ERROR(8,eb64d701): Interpretation error: Error: node NodeId(0) (6555902d9ef506039adb032ec52cec46b4025fafc630458a260d4f23ad654610:Iou:Iou) requires authorizers Bank::12208835968c9544ba5620352ff54eda48dd840618a0d99fd2b7ccafb0e4dbe03933, but only Alice::12208f4771dd3bac7563f4b70a462b4afd96d8fd85e84a854db58ef6a71b103261ed were given\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Alice::12208f4771dd...,\n.."
  }
}