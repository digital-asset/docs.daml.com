# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2.1

env: &env
  TERM: dumb
  CI: "true"
  USER: circleci

commands:
  setup_nix:
    description: Set up Nix
    steps:
    - run:
        name: make_cache_key
        command: |
          set -euo pipefail

          git log -n1 --format=%H nix shell.nix > /tmp/nix-cache-key
          sudo mkdir /nix
          sudo chown $USER /nix
    - restore_cache:
        keys:
        - nix-{{ checksum "/tmp/nix-cache-key" }}
    - run:
       name: setup_nix
       command: |
         set -euo pipefail

         if [ -f ~/.config/nix/nix.conf ]; then
             exit 0
         fi

         # Disabling sandbox because:
         # 1. It doesn't work on CircleCI (sethostname is not allowed)
         # 2. We don't plan to build anything, so the risk is fairly low
         mkdir -p ~/.config/nix
         echo 'sandbox = false' >> ~/.config/nix/nix.conf

         sh <(curl -fsSL https://nixos.org/nix/install) --no-daemon
         . /home/circleci/.nix-profile/etc/profile.d/nix.sh
         nix-shell shell.nix --run 'echo "Done loading all packages."'
    - save_cache:
        key: nix-{{ checksum "/tmp/nix-cache-key" }}
        paths:
        - /nix
        - /home/circleci/.nix-profile
        - /home/circleci/.nix-channels
        - /home/circleci/.nix-defexpr
        - /home/circleci/.config/nix

jobs:
  build_docs:
    docker:
    - image: cimg/base:2021.04
    environment:
      <<: *env
    steps:
      - checkout
      - setup_nix
      - run:
         name: build
         command: |
           set -euo pipefail

           . /home/circleci/.nix-profile/etc/profile.d/nix.sh

           mkdir -p /tmp/workspace

           nix-shell shell.nix \
             --pure \
             --keep ARTIFACTORY_USERNAME \
             --keep ARTIFACTORY_PASSWORD \
             --run "./ci/build_docs.sh /tmp/workspace"
      - store_artifacts:
         path: /tmp/workspace
      - persist_to_workspace:
         root: /tmp/workspace
         paths:
         - "*"

  push_docs:
    docker:
    - image: cimg/base:2021.04
    environment:
      <<: *env
    steps:
      - checkout
      - setup_nix
      - attach_workspace:
         at: /tmp/workspace
      - run:
         name: push
         command: |
           set -euo pipefail
           . /home/circleci/.nix-profile/etc/profile.d/nix.sh

           nix-shell shell.nix \
             --pure \
             --keep AWS_ACCESS_KEY_ID \
             --keep AWS_SECRET_ACCESS_KEY \
             --run bash \<<'EOF'
             set -euo pipefail

             prefix=$(jq -r '.prefix' LATEST)
             sdk_version=$(jq -r '.daml' LATEST)

             workdir=$(mktemp -d)
             mkdir $workdir/upload
             trap "rm -rf $workdir" EXIT
             tar xf /tmp/workspace/html-docs-$sdk_version.tar.gz -C $workdir/upload --strip-components=1
             aws s3 cp $workdir/upload s3://docs-daml-com/$prefix --recursive --acl public-read --region us-east-1
             echo "invalidating cache"
             aws cloudfront create-invalidation --distribution-id E1U753I56ERH55 --paths "/$prefix/*"
           EOF

workflows:
  version: 2
  build:
    jobs:
    - build_docs
    - push_docs:
        requires:
        - build_docs
        filters:
          branches:
            only: main
