{
  "481" : {
    "command" : "val pkgPaint = participant1.packages.find(\"Paint\").head",
    "output" : "pkgPaint : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "280" : {
    "command" : "",
    "output" : ""
  },
  "452" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(alice), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcClientError: INVALID_ARGUMENT/DAML_AUTHORIZATION_ERROR(8,7e11d934): Interpretation error: Error: node NodeId(0) (9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4:Iou:Iou) requires authorizers Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be, but only Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25 were given\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Alice::122073a56705...,\n.."
  },
  "392" : {
    "command" : "val bank = participant2.parties.enable(\"Bank\", waitForDomain = DomainChoice.All)",
    "output" : "bank : PartyId = Bank::1220ef69b7a2..."
  },
  "328" : {
    "command" : "val p2UidString = participant2.id.uid.toProtoPrimitive",
    "output" : "p2UidString : String = \"participant2::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\""
  },
  "286" : {
    "command" : "mydomain.parties.list(\"Bob\")",
    "output" : "res18: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Bob::1220ef69b7a2...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant2::1220ef69b7a2...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::12207c86b71a..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "208" : {
    "command" : "",
    "output" : ""
  },
  "462" : {
    "command" : "val aliceIou = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Iou\", \"Iou\"))",
    "output" : "aliceIou : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#12207869f2234d92b6c4dbe813c25ea046c160f0fb41806d2a5ae513f1d4b7b671fb:0\",\n    contractId = \"0091784ef7525dfa1044705133b3a52f222875f8c16b7c024f15c6b4f431001964ca0212209b7e55e368662ff0345cb184e5e5e6ca7bbdb9b0659fb1537c8511df7f755de7\",\n.."
  },
  "310" : {
    "command" : "val p2Id = ParticipantId.tryFromProtoPrimitive(extractedId)",
    "output" : "p2Id : ParticipantId = PAR::participant2::1220ef69b7a2..."
  },
  "363" : {
    "command" : "participant1.dars.list()",
    "output" : "res30: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"12204bc4767d74039aad3fab9f92bdf15f59d08ff9c8224c946833b8e5415f2e45f1\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"12207dd6f1ebef1441d185e9468e32555abbb8955e2c447c7ff78aa9c64a99db7c78\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "517" : {
    "command" : "",
    "output" : ""
  },
  "369" : {
    "command" : "participant2.dars.list()",
    "output" : "res31: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"12204bc4767d74039aad3fab9f92bdf15f59d08ff9c8224c946833b8e5415f2e45f1\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"12207dd6f1ebef1441d185e9468e32555abbb8955e2c447c7ff78aa9c64a99db7c78\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "511" : {
    "command" : "",
    "output" : ""
  },
  "269" : {
    "command" : "",
    "output" : ""
  },
  "202" : {
    "command" : "health.status",
    "output" : "res10: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::12207c86b71aae48ba445a344b6a33dcae4cad4b57af6b9e0d6c4c15cbc9b03ff94d\nUptime: 5.713787s\nPorts: \n\tadmin: 30037\n\tpublic: 30036\nConnected Participants: \n\tPAR::participant2::1220ef69b7a2...\n\tPAR::participant1::122073a56705...\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\n.."
  },
  "174" : {
    "command" : "",
    "output" : ""
  },
  "320" : {
    "command" : "val aliceAsStr = alice.toProtoPrimitive",
    "output" : "aliceAsStr : String = \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\""
  },
  "436" : {
    "command" : "val pkgIou = participant1.packages.find(\"Iou\").head",
    "output" : "pkgIou : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "504" : {
    "command" : "participant2.ledger_api.acs.of_party(bob).map(x => (x.templateId, x.arguments))",
    "output" : "res43: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"houseOwner\" -> \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\",\n      \"bank\" -> \"Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "344" : {
    "command" : "participants.all.dars.upload(\"dars/CantonExamples.dar\")",
    "output" : "res27: Map[com.digitalasset.canton.console.ParticipantReference, String] = Map(\n  Participant 'participant1' -> \"12204bc4767d74039aad3fab9f92bdf15f59d08ff9c8224c946833b8e5415f2e45f1\",\n  Participant 'participant2' -> \"12204bc4767d74039aad3fab9f92bdf15f59d08ff9c8224c946833b8e5415f2e45f1\"\n)"
  },
  "196" : {
    "command" : "participant2.domains.connect_local(mydomain)",
    "output" : ""
  },
  "475" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res38: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "179" : {
    "command" : "mydomain.health.status",
    "output" : "res7: com.digitalasset.canton.health.admin.data.NodeStatus[mydomain.Status] = Domain id: mydomain::12207c86b71aae48ba445a344b6a33dcae4cad4b57af6b9e0d6c4c15cbc9b03ff94d\nUptime: 2.928035s\nPorts: \n\tadmin: 30037\n\tpublic: 30036\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()"
  },
  "321" : {
    "command" : "val aliceParsed = PartyId.tryFromProtoPrimitive(aliceAsStr)",
    "output" : "aliceParsed : PartyId = Alice::122073a56705..."
  },
  "106" : {
    "command" : "participant1.help(\"start\")",
    "output" : "start\nStart the instance"
  },
  "238" : {
    "command" : "participant2.id",
    "output" : "res14: ParticipantId = PAR::participant2::1220ef69b7a2..."
  },
  "467" : {
    "command" : "participant1.ledger_api.acs.of_party(alice)",
    "output" : "res37: Seq[com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent] = List(\n  WrappedCreatedEvent(\n    event = CreatedEvent(\n      eventId = \"#12207869f2234d92b6c4dbe813c25ea046c160f0fb41806d2a5ae513f1d4b7b671fb:0\",\n      contractId = \"0091784ef7525dfa1044705133b3a52f222875f8c16b7c024f15c6b4f431001964ca0212209b7e55e368662ff0345cb184e5e5e6ca7bbdb9b0659fb1537c8511df7f755de7\",\n      templateId = Some(\n        value = Identifier(\n          packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n.."
  },
  "197" : {
    "command" : "",
    "output" : ""
  },
  "329" : {
    "command" : "val p2FromUid = ParticipantId(UniqueIdentifier.tryFromProtoPrimitive(p2UidString))",
    "output" : "p2FromUid : ParticipantId = PAR::participant2::1220ef69b7a2..."
  },
  "285" : {
    "command" : "",
    "output" : ""
  },
  "457" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcRequestRefusedByServer: NOT_FOUND/NO_DOMAIN_ON_WHICH_ALL_SUBMITTERS_CAN_SUBMIT(11,c6f59113): This participant can not submit as the given submitter on any connected domain\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Bank::1220ef69b7a2...,\n.."
  },
  "173" : {
    "command" : "participant1.health.status",
    "output" : "res6: com.digitalasset.canton.health.admin.data.NodeStatus[com.digitalasset.canton.health.admin.data.ParticipantStatus] = Participant id: PAR::participant1::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\nUptime: 2.01753s\nPorts: \n\tledger: 30032\n\tadmin: 30033\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "237" : {
    "command" : "participant1.id",
    "output" : "res13: ParticipantId = PAR::participant1::122073a56705..."
  },
  "105" : {
    "command" : "help(\"participant1\")",
    "output" : "participant1\nManage participant 'participant1'; type 'participant1 help' or 'participant1 help(\"<methodName>\")' for more help"
  },
  "266" : {
    "command" : "val alice = participant1.parties.enable(\"Alice\")",
    "output" : "alice : PartyId = Alice::122073a56705..."
  },
  "530" : {
    "command" : "import com.digitalasset.canton.protocol.LfContractId",
    "output" : ""
  },
  "279" : {
    "command" : "mydomain.parties.list(\"Alice\")",
    "output" : "res17: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Alice::122073a56705...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant1::122073a56705...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::12207c86b71a..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "180" : {
    "command" : "",
    "output" : ""
  },
  "71" : {
    "command" : "Seq(1,2,3).map(_ * 2)",
    "output" : "res1: Seq[Int] = List(2, 4, 6)"
  },
  "236" : {
    "command" : "mydomain.id",
    "output" : "res12: DomainId = mydomain::12207c86b71a..."
  },
  "350" : {
    "command" : "nodes.local",
    "output" : "res28: Seq[com.digitalasset.canton.console.LocalInstanceReferenceCommon] = ArraySeq(Participant 'participant1', Participant 'participant2', Domain 'mydomain')"
  },
  "278" : {
    "command" : "",
    "output" : ""
  },
  "267" : {
    "command" : "",
    "output" : ""
  },
  "505" : {
    "command" : "",
    "output" : ""
  },
  "490" : {
    "command" : "val createOfferCmd = ledger_api_utils.create(pkgPaint.packageId, \"Paint\", \"OfferToPaintHouseByPainter\", Map(\"bank\" -> bank, \"houseOwner\" -> alice, \"painter\" -> bob, \"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\")))",
    "output" : "createOfferCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n.."
  },
  "531" : {
    "command" : "val acceptOffer = ledger_api_utils.exercise(\"AcceptByOwner\", Map(\"iouId\" -> LfContractId.assertFromString(aliceIou.event.contractId)),paintOffer.event)",
    "output" : "acceptOffer : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Exercise(\n    value = ExerciseCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n.."
  },
  "209" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : "res11: Duration = 239 milliseconds"
  },
  "516" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res45: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  ),\n  (\n    TemplateId(\n      packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"houseOwner\" -> \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\",\n      \"bank\" -> \"Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "355" : {
    "command" : "participants.all",
    "output" : "res29: Seq[com.digitalasset.canton.console.ParticipantReference] = List(Participant 'participant1', Participant 'participant2')"
  },
  "194" : {
    "command" : "participant1.domains.connect_local(mydomain)",
    "output" : ""
  },
  "441" : {
    "command" : "val createIouCmd = ledger_api_utils.create(pkgIou.packageId,\"Iou\",\"Iou\",Map(\"payer\" -> bank,\"owner\" -> alice,\"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\"),\"viewers\" -> List()))",
    "output" : "createIouCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n.."
  },
  "370" : {
    "command" : "",
    "output" : ""
  },
  "72" : {
    "command" : "",
    "output" : ""
  },
  "446" : {
    "command" : "participant2.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "res35: com.daml.ledger.api.v1.transaction.TransactionTree = TransactionTree(\n  transactionId = \"12207869f2234d92b6c4dbe813c25ea046c160f0fb41806d2a5ae513f1d4b7b671fb\",\n  commandId = \"e8e28048-a2a0-415b-aba7-d3772c9fa30a\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n      seconds = 1708676278L,\n      nanos = 622503000,\n      unknownFields = UnknownFieldSet(fields = Map())\n    )\n  ),\n  offset = \"000000000000000015\",\n.."
  },
  "510" : {
    "command" : "participant2.ledger_api.acs.of_party(bank).map(x => (x.templateId, x.arguments))",
    "output" : "res44: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"9c022a1adf23eee51cb64a3a5d600ef83eadf1089044117cdf1e46e7553058d4\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "287" : {
    "command" : "",
    "output" : ""
  },
  "300" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : ".."
  },
  "315" : {
    "command" : "participant1.health.ping(p2Id)",
    "output" : "res22: Duration = 199 milliseconds"
  },
  "168" : {
    "command" : "health.status",
    "output" : "res5: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::12207c86b71aae48ba445a344b6a33dcae4cad4b57af6b9e0d6c4c15cbc9b03ff94d\nUptime: 2.708287s\nPorts: \n\tadmin: 30037\n\tpublic: 30036\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\nStatus for Participant 'participant1':\nParticipant id: PAR::participant1::122073a567059d920f674ca397e199ef13b88d148bdf97f02342bd765a019c702a25\nUptime: 1.918948s\nPorts: \n\tledger: 30032\n\tadmin: 30033\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized\n\nStatus for Participant 'participant2':\nParticipant id: PAR::participant2::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\nUptime: 1.910095s\nPorts: \n\tledger: 30034\n\tadmin: 30035\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "305" : {
    "command" : "val extractedId = participant2.id.toProtoPrimitive",
    "output" : "extractedId : String = \"PAR::participant2::1220ef69b7a210ba65d95ff1a82bc650040ff2162df88d8a98a5410948a73dcc50be\""
  },
  "268" : {
    "command" : "val bob = participant2.parties.enable(\"Bob\")",
    "output" : "bob : PartyId = Bob::1220ef69b7a2..."
  },
  "195" : {
    "command" : "",
    "output" : ""
  },
  "532" : {
    "command" : "participant1.ledger_api.commands.submit_flat(Seq(alice), Seq(acceptOffer))",
    "output" : "res48: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"1220ba66f4b42e5dc5917b06bcbf60683deecda98a36da011ba31c279d37a0810aca\",\n  commandId = \"eb385943-17f4-43e2-80b4-77acdfd0c71d\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "322" : {
    "command" : "",
    "output" : ""
  },
  "491" : {
    "command" : "participant2.ledger_api.commands.submit_flat(Seq(bob), Seq(createOfferCmd))",
    "output" : "res41: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"1220a880db062265ac6847a9d28a42301197cce2b5cb007d697145dfcbd53bfe5762\",\n  commandId = \"9b5b16e4-23bf-41b2-90d6-f96931d43ae1\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "496" : {
    "command" : "val paintOffer = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Paint\", \"OfferToPaintHouseByPainter\"))",
    "output" : "paintOffer : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#1220a880db062265ac6847a9d28a42301197cce2b5cb007d697145dfcbd53bfe5762:0\",\n    contractId = \"0002324dd896a5be9b6335da01c61f09555503ca187bd8b982751b78c1de60ac8fca021220be4829744a9ec93037a10ab803d67207bfa2bec2384f89c16d5038a39f42ddf0\",\n    templateId = Some(\n      value = Identifier(\n.."
  },
  "364" : {
    "command" : "",
    "output" : ""
  },
  "100" : {
    "command" : "help",
    "output" : "Top-level Commands\n------------------\nexit - Leave the console\nhelp - Help with console commands; type help(\"<command>\") for detailed help for <command>\n\nGeneric Node References\n-----------------------\ndomainManagers - All domain manager nodes (.all, .local, .remote)\n.."
  }
}