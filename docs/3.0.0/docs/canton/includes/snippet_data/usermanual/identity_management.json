{
  "416" : {
    "command" : "participant1.ledger_api.users.get(user.id)",
    "output" : "res9: User = User(\n  id = \"myuser\",\n  primaryParty = None,\n  isActive = true,\n  annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n  identityProviderId = \"\"\n)"
  },
  "428" : {
    "command" : "participant1.ledger_api.users.rights.grant(id = user.id, actAs = Set(alice, bob), readAs = Set(eve), participantAdmin = true)",
    "output" : "res11: UserRights = UserRights(\n  actAs = Set(bob::1220688e05e5...),\n  readAs = Set(eve::1220688e05e5...),\n  participantAdmin = true,\n  identityProviderAdmin = false\n)"
  },
  "439" : {
    "command" : "participant1.ledger_api.users.rights.list(user.id)",
    "output" : "res13: UserRights = UserRights(\n  actAs = Set(alice::1220688e05e5...),\n  readAs = Set(bob::1220688e05e5..., eve::1220688e05e5...),\n  participantAdmin = false,\n  identityProviderAdmin = false\n)"
  },
  "408" : {
    "command" : "participant1.ledger_api.users.get(\"myuser\", identityProviderId=\"\")",
    "output" : "res8: User = User(\n  id = \"myuser\",\n  primaryParty = None,\n  isActive = true,\n  annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n  identityProviderId = \"\"\n)"
  },
  "372" : {
    "command" : "val user = participant1.ledger_api.users.create(id = \"myuser\", actAs = Set(alice), readAs = Set(bob), primaryParty = Some(alice), participantAdmin = false, isActive = true, annotations = Map(\"foo\" -> \"bar\", \"description\" -> \"This is a description\"))",
    "output" : "user : User = User(\n  id = \"myuser\",\n  primaryParty = Some(value = alice::1220688e05e5...),\n  isActive = true,\n  annotations = Map(\"foo\" -> \"bar\", \"description\" -> \"This is a description\"),\n  identityProviderId = \"\"\n)"
  },
  "460" : {
    "command" : "participant1.ledger_api.users.list(\"myotheruser\")",
    "output" : "res17: UsersPage = UsersPage(users = Vector(), nextPageToken = \"\")"
  },
  "392" : {
    "command" : "",
    "output" : ""
  },
  "407" : {
    "command" : "participant1.ledger_api.users.update_idp(\"myuser\", sourceIdentityProviderId=\"idp-id1\", targetIdentityProviderId=\"\")",
    "output" : ""
  },
  "393" : {
    "command" : "",
    "output" : ""
  },
  "402" : {
    "command" : "participant1.ledger_api.users.get(\"myuser\", identityProviderId=\"idp-id1\")",
    "output" : "res6: User = User(\n  id = \"myuser\",\n  primaryParty = None,\n  isActive = true,\n  annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n  identityProviderId = \"idp-id1\"\n)"
  },
  "391" : {
    "command" : "val updatedUser = participant1.ledger_api.users.update(id = user.id, modifier = user => { user.copy(primaryParty = None, annotations = user.annotations.updated(\"description\", \"This is a new description\").removed(\"foo\").updated(\"baz\", \"bar\")) })",
    "output" : "updatedUser : User = User(\n  id = \"myuser\",\n  primaryParty = None,\n  isActive = true,\n  annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n  identityProviderId = \"\"\n)"
  },
  "445" : {
    "command" : "participant1.ledger_api.users.create(id = \"myotheruser\")",
    "output" : "res14: User = User(\n  id = \"myotheruser\",\n  primaryParty = None,\n  isActive = true,\n  annotations = Map(),\n  identityProviderId = \"\"\n)"
  },
  "362" : {
    "command" : "",
    "output" : ""
  },
  "434" : {
    "command" : "participant1.ledger_api.users.rights.revoke(id = user.id, actAs = Set(bob), readAs = Set(alice), participantAdmin = true)",
    "output" : "res12: UserRights = UserRights(\n  actAs = Set(bob::1220688e05e5...),\n  readAs = Set(),\n  participantAdmin = true,\n  identityProviderAdmin = false\n)"
  },
  "455" : {
    "command" : "participant1.ledger_api.users.delete(\"myotheruser\")",
    "output" : ""
  },
  "446" : {
    "command" : "participant1.ledger_api.users.list(filterUser = \"my\")",
    "output" : "res15: UsersPage = UsersPage(\n  users = Vector(\n    User(\n      id = \"myotheruser\",\n      primaryParty = None,\n      isActive = true,\n      annotations = Map(),\n      identityProviderId = \"\"\n    ),\n    User(\n      id = \"myuser\",\n      primaryParty = None,\n      isActive = true,\n      annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n      identityProviderId = \"\"\n    )\n  ),\n  nextPageToken = \"\"\n)"
  },
  "465" : {
    "command" : "participant1.ledger_api.users.update(\"myuser\", user => user.copy(isActive = false))",
    "output" : "res18: User = User(\n  id = \"myuser\",\n  primaryParty = None,\n  isActive = false,\n  annotations = Map(\"baz\" -> \"bar\", \"description\" -> \"This is a new description\"),\n  identityProviderId = \"\"\n)"
  },
  "363" : {
    "command" : "val Seq(alice, bob, eve) = Seq(\"alice\", \"bob\", \"eve\").map(p => participant1.parties.enable(name = p, waitForDomain = DomainChoice.All))",
    "output" : "Seq(alice, bob, eve) : Seq[PartyId] = List(alice::1220688e05e5..., bob::1220688e05e5..., eve::1220688e05e5...)"
  },
  "401" : {
    "command" : "participant1.ledger_api.users.update_idp(\"myuser\", sourceIdentityProviderId=\"\", targetIdentityProviderId=\"idp-id1\")",
    "output" : ""
  },
  "422" : {
    "command" : "participant1.ledger_api.users.rights.list(user.id)",
    "output" : "res10: UserRights = UserRights(\n  actAs = Set(alice::1220688e05e5...),\n  readAs = Set(bob::1220688e05e5...),\n  participantAdmin = false,\n  identityProviderAdmin = false\n)"
  },
  "373" : {
    "command" : "",
    "output" : ""
  },
  "400" : {
    "command" : "participant1.ledger_api.identity_provider_config.create(\"idp-id1\", isDeactivated = false, jwksUrl = \"http://someurl\", issuer = \"issuer1\", audience = None)",
    "output" : "res4: com.digitalasset.canton.ledger.api.domain.IdentityProviderConfig = IdentityProviderConfig(\n  identityProviderId = Id(value = \"idp-id1\"),\n  isDeactivated = false,\n  jwksUrl = JwksUrl(value = \"http://someurl\"),\n  issuer = \"issuer1\",\n  audience = None\n)"
  }
}
