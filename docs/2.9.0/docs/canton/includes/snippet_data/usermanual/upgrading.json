{
  "170" : {
    "command" : "participant.start()",
    "output" : ""
  },
  "587" : {
    "command" : "participant.domains.disconnect(\"olddomain\")",
    "output" : ""
  },
  "646" : {
    "command" : "participant.domains.list_connected()",
    "output" : "res8: Seq[ListConnectedDomainsResult] = Vector(\n  ListConnectedDomainsResult(\n    domainAlias = Domain 'newdomain',\n    domainId = newdomain::1220905a6a6f...,\n    healthy = true\n  )\n)"
  },
  "657" : {
    "command" : "participant.health.ping(participant)",
    "output" : "res10: Duration = 469 milliseconds"
  },
  "579" : {
    "command" : "",
    "output" : ""
  },
  "641" : {
    "command" : "participant.domains.reconnect_all()",
    "output" : ""
  },
  "194" : {
    "command" : "participant.domains.list_connected()",
    "output" : "res6: Seq[ListConnectedDomainsResult] = Vector(\n  ListConnectedDomainsResult(\n    domainAlias = Domain 'testdomain',\n    domainId = testdomain::122007e9e5c2...,\n    healthy = true\n  )\n)"
  },
  "580" : {
    "command" : "",
    "output" : ""
  },
  "182" : {
    "command" : "testdomain.start()",
    "output" : ""
  },
  "143" : {
    "command" : "participant.start()",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - failed to initialize participant: There are 7 pending migrations to get to database schema version 8. Currently on version 1.1. Please run `participant.db.migrate` to apply pending migrations\n  Command LocalParticipantReference.start invoked from cmd10000002.sc:1"
  },
  "652" : {
    "command" : "participant.resources.set_resource_limits(ResourceLimits(None, None))",
    "output" : ""
  },
  "183" : {
    "command" : "participant.domains.connect_local(testdomain)",
    "output" : ""
  },
  "195" : {
    "command" : "",
    "output" : ""
  },
  "200" : {
    "command" : "participant.health.ping(participant)",
    "output" : "res7: Duration = 536 milliseconds"
  },
  "592" : {
    "command" : "participant.domains.list_connected()",
    "output" : "res3: Seq[ListConnectedDomainsResult] = Vector()"
  },
  "189" : {
    "command" : "participant.domains.reconnect_all()",
    "output" : ""
  },
  "152" : {
    "command" : "participant.db.migrate()",
    "output" : ""
  },
  "578" : {
    "command" : "",
    "output" : ""
  },
  "615" : {
    "command" : "val config = DomainConnectionConfig(\"newdomain\", GrpcSequencerConnection.tryCreate(\"https://127.0.0.1:5018\"))",
    "output" : "config : DomainConnectionConfig = DomainConnectionConfig(\n  domain = Domain 'newdomain',\n  sequencerConnections = Sequencer 'DefaultSequencer' -> GrpcSequencerConnection(\n    endpoints = https://127.0.0.1:5018,\n    transportSecurity = true\n.."
  },
  "593" : {
    "command" : "",
    "output" : ""
  },
  "622" : {
    "command" : "val config = DomainConnectionConfig(\"newdomain\", newdomain.sequencerConnection)",
    "output" : "config : DomainConnectionConfig = DomainConnectionConfig(\n  domain = Domain 'newdomain',\n  sequencerConnections = Sequencer 'DefaultSequencer' -> GrpcSequencerConnection(\n    endpoints = http://127.0.0.1:30294,\n    transportSecurity = false\n.."
  },
  "647" : {
    "command" : "",
    "output" : ""
  },
  "627" : {
    "command" : "participant.repair.migrate_domain(\"olddomain\", config)",
    "output" : ""
  },
  "581" : {
    "command" : "participant.resources.set_resource_limits(ResourceLimits(Some(0), Some(0)))",
    "output" : ""
  }
}