.. Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
.. SPDX-License-Identifier: Apache-2.0

Install ``canton-participant`` Chart
####################################

Objectives
**********

* Customize Helm chart parameters
* Install Helm chart
* Verify the status of the deployment

Steps
*****

1. Inspect the Helm value files generated by Terraform
======================================================

.. note::
   The Terraform scripts were used to parameterize the Helm values. If standalone Helm deployment is done without Terraform the value file has to be customized manually (see example below).

.. note::
   In this guide we are deploying the participant node before deploying the domain node. We may do this because we are deploying both onto the same Kubernetes cluster, and we know the `participant node's identity <https://docs.daml.com/canton/usermanual/identity_management.html#default-initialization>`_ beforehand (e.g., that its name is ``participant1``\ ). For more details, see the `relevant section in the canton-domain Helm chart documentation <https://artifacthub.io/packages/helm/digital-asset/canton-domain#bootstrap>`_. In most cases, the operators of the participant and domain nodes differ, hence, a more involved `on-boarding process <https://docs.daml.com/canton/usermanual/identity_management.html#participant-onboarding>`_ has to be used.

.. tabs::
  .. tab:: Azure
    Example `participant.yaml <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/blob/main/azure/helm/values/participant.yaml>`_:

    .. code-block:: yaml

        ---
        image:
          registry: "<container_image_registry_hostname>"

        storage:
          host: "<postgresql_server_hostname>"
          database: "participant1"
          user: "participant1"
          existingSecret:
            name: "participant1-postgresql"
            key: "participant1"

        console:
          enabled: true

        participantName: "participant1"

        certManager:
          issuerGroup: certmanager.step.sm
          issuerKind: StepClusterIssuer

        tls:
          public:
            enabled: true
            certManager:
              issuerName: canton-tls-issuer
          admin:
            enabled: true
            certManager:
              issuerName: canton-tls-issuer

        authServices:
          enabled: true
          url: "<jwks_url>"
          targetAudience: "<jwt_audience>"
          additionalAdminUserId: "<ledger_admin_user>"

        ingressRouteTCP:
          enabled: true
          hostSNI: "<ledger_dns_record>"
          tls:
            passthrough: true

  .. tab:: AWS
    Example `participant.yaml <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/blob/main/aws/helm/values/participant.yaml>`_:

    .. code-block:: yaml

        ---
        image:
          registry: "<container_image_registry_hostname>"

        storage:
          host: "<postgresql_server_hostname>"
          database: "participant1"
          user: "participant1"
          existingSecret:
            name: "participant1-postgresql"
            key: "participant1"

        console:
          enabled: true

        participantName: "participant1"

        tls:
          public:
            enabled: true
            certManager:
              issuerName: "aws-privateca-issuer"
          admin:
            enabled: true
            certManager:
              issuerName: "aws-privateca-issuer"

        authServices:
          enabled: true
          url: "<jwks_url>"
          targetAudience: "<jwt_audience>"
          additionalAdminUserId: "<ledger_admin_user>"

        ingressRouteTCP:
          enabled: true
          hostSNI: "<ledger_dns_record>"
          tls:
            passthrough: true

.. note::
   To learn about the supported attributes for canton-participant, check out the documentation `here <https://artifacthub.io/packages/helm/digital-asset/canton-participant#parameters>`_.

2. Install the chart
====================

.. note::
  Depending on your cloud provider of choice, make sure the current directory is the ``azure/terraform`` or ``aws/terraform`` folder of your clone of the `accompanying resources <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/>`_.

With the value files prepared we can install the Helm chart:

.. code-block:: bash

   helm -n canton install participant1 digital-asset/canton-participant -f helm/values/participant.yaml --create-namespace

Expected output:

.. code-block:: bash

   NAME: participant1
   LAST DEPLOYED: Wed Aug 16 16:27:15 2023
   NAMESPACE: canton
   STATUS: deployed
   REVISION: 1
   TEST SUITE: None
   NOTES:
   *
     _____            _
    / ____|          | |
   | |     __ _ _ __ | |_ ___  _ __
   | |    / _` | '_ \| __/ _ \| '_ \
   | |___| (_| | | | | || (_) | | | |
    \_____\__,_|_| |_|\__\___/|_| |_|

   Participant 2.7.1 has been deployed successfully!

   More information on how to configure Canton can be found in our documentation:

   https://docs.daml.com/

3. Check deployment status
==========================

We can check the status of the deployment using the below command. Note that the participant will be connecting to the PostgreSQL instance :doc:`we provisioned earlier <../../02-provision-cloud-resources/01-provision-cloud-resources>`.

.. code-block:: bash

   kubectl -n canton get pods

Expected output:

.. code-block:: bash

   NAME                                               READY   STATUS      RESTARTS   AGE
   participant1-canton-participant-647b99cb8b-dbzrw   1/1     Running     0          15m
