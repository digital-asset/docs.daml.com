# Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates.
# All rights reserved.

# -*- coding: utf-8 -*-
#
# Canton documentation build configuration file, adapted from
# https://github.com/DACH-NY/daml/blob/master/docs/configs/html/conf.py
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import sys
import os
import subprocess

SPHINX_DIR = os.path.abspath(os.path.join(os.path.dirname(os.path.abspath(__file__))))
PROJECT_DIR = os.path.abspath(os.path.join(SPHINX_DIR, '..', '..', '..'))

# TODO(Andreas): When internal architecture documents are fully integrated
# point to new location of exts directory
DOCS_EXTS_DIR = os.path.abspath(
    os.path.join(PROJECT_DIR, 'docs', 'src', 'sphinx', 'exts'))

DOCS_OPEN_EXTS_DIR = os.path.abspath(
    os.path.join(SPHINX_DIR, 'exts'))

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('./support'))
sys.path.insert(0, DOCS_EXTS_DIR)
sys.path.insert(0, DOCS_OPEN_EXTS_DIR)

# -- Helper function ------------------------------------------------------


# Returns a pair (version, release) where
# `version` is of the form `n.n.n`
# `release` is of the form `n.n.n-QUALIFIER`
def get_project_version():
    cmd = ['sbt', '-error', 'showVersion']
    release = subprocess.check_output(cmd, cwd=PROJECT_DIR).decode('utf-8')
    version = release.split('-')[0]
    return (version, release)


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.mathjax', 'sphinx.ext.todo', 'more_named_targets',
              'sphinx.ext.intersphinx', 'pygments_daml_lexer', 'canton_enterprise_only']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Canton'
copyright = u'2023, Digital Asset'
author = u'Digital Asset'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# `version` is the short X.Y version
# `release` is the full version, including alpha/beta/rc tags
version, release = get_project_version()

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
html_static_path = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'navigation_depth': -1,
    'collapse_navigation': False,
    'analytics_id': 'UA-64532708-4'
}


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'CantonHandbook'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'CantonManual.tex', u'Canton Manual',
     u'Digital Asset', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'CantonManual', u'Canton Manual',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Canton Manual', u'Canton Manual',
     author, 'Canton Manual', 'User and Reference Manual for Canton',
     'Miscellaneous'),
]

# Intersphinx configuration for cross-docs references
intersphinx_mapping = {'daml': ('https://docs.daml.com', None)}
