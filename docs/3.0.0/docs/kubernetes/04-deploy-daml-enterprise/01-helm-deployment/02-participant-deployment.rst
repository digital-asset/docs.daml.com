.. Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
.. SPDX-License-Identifier: Apache-2.0

Install ``canton-participant`` chart
####################################

Objectives
**********

* Customize the Helm chart parameters
* Install the Helm chart
* Verify the deployment status

Steps
*****

1. Inspect the Helm value files generated by Terraform
======================================================

.. note::
   The Terraform scripts parameterize the Helm values. For a standalone Helm deployment without Terraform, you must customize the value file manually (see example below).
   Note that, in this guide, you deploy the participant node before deploying the domain node. You may do this because you deploy both onto the same Kubernetes cluster, and you know the `participant node's identity <https://docs.daml.com/canton/usermanual/identity_management.html#default-initialization>`_ beforehand (for example, that its name is ``participant1``\ ). For more details, see the `relevant section in the canton-domain Helm chart documentation <https://artifacthub.io/packages/helm/digital-asset/canton-domain#bootstrap>`_. In most cases, the operators of the participant and domain nodes differ, requiring a more involved `onboarding process <https://docs.daml.com/canton/usermanual/identity_management.html#participant-onboarding>`_.

.. tabs::
  .. tab:: Azure
    Example `participant.yaml <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/blob/main/azure/helm/values/participant.yaml>`__:

    .. code-block:: yaml

        ---
        image:
          registry: "<container_image_registry_hostname>"
        storage:
          host: "<postgresql_server_hostname>"
          database: "participant1"
          user: "participant1"
          existingSecret:
            name: "participant1-postgresql"
            key: "participant1"
        console:
          enabled: true
        participantName: "participant1"
        certManager:
          issuerGroup: certmanager.step.sm
          issuerKind: StepClusterIssuer
        tls:
          public:
            enabled: true
            certManager:
              issuerName: canton-tls-issuer
          admin:
            enabled: true
            certManager:
              issuerName: canton-tls-issuer
        authServices:
          enabled: true
          url: "<jwks_url>"
          targetAudience: "<jwt_audience>"
          additionalAdminUserId: "<ledger_admin_user>"
        ingressRouteTCP:
          enabled: true
          hostSNI: "<ledger_dns_record>"
          tls:
            passthrough: true
  .. tab:: AWS
    Example `participant.yaml <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/blob/main/aws/helmfile/values/participant.yaml>`__:

    .. code-block:: yaml

        ---
        image:
          registry: "<container_image_registry_hostname>"
        storage:
          host: "<postgresql_server_hostname>"
          database: "participant1"
          user: "participant1"
          existingSecret:
            name: "participant1-postgresql"
            key: "participant1"
        console:
          enabled: true
        participantName: "participant1"
        tls:
          public:
            enabled: true
            certManager:
              issuerName: "aws-privateca-issuer"
          admin:
            enabled: true
            certManager:
              issuerName: "aws-privateca-issuer"
        authServices:
          enabled: true
          url: "<jwks_url>"
          targetAudience: "<jwt_audience>"
          additionalAdminUserId: "<ledger_admin_user>"
        ingressRouteTCP:
          enabled: true
          hostSNI: "<ledger_dns_record>"
          tls:
            passthrough: true

.. note::
   To learn about the supported attributes for ``canton-participant``, see the `canton-participant documentation <https://artifacthub.io/packages/helm/digital-asset/canton-participant#parameters>`_.

2. Install the chart
====================

.. note::
  Depending on your cloud provider of choice, make sure the current directory is the ``azure/terraform`` or ``aws/terraform`` folder of your clone of the `Daml Enterprise Deployment Resources <https://github.com/DACH-NY/daml-enterprise-deployment-blueprints/>`__.

After preparing the value files, install the Helm chart:

.. code-block:: bash

   helm -n canton install participant1 digital-asset/canton-participant -f helm/values/participant.yaml --create-namespace

Expected output:

.. code-block:: bash

   NAME: participant1
   LAST DEPLOYED: Wed Aug 16 16:27:15 2023
   NAMESPACE: canton
   STATUS: deployed
   REVISION: 1
   TEST SUITE: None
   NOTES:
   *
     _____            _
    / ____|          | |
   | |     __ _ _ __ | |_ ___  _ __
   | |    / _` | '_ \| __/ _ \| '_ \
   | |___| (_| | | | | || (_) | | | |
    \_____\__,_|_| |_|\__\___/|_| |_|

   Participant 2.7.1 has been deployed successfully!

   More information on how to configure Canton can be found in our documentation:

   https://docs.daml.com/

3. Check deployment status
==========================

You can check the status of the deployment using the following command. Note that the participant connects to the PostgreSQL instance you provisioned earlier as described in the :doc:`Provision cloud resources with Terraform <../../02-provision-cloud-resources/01-provision-cloud-resources>` section.

.. code-block:: bash

   kubectl -n canton get pods

Expected output:

.. code-block:: bash

   NAME                                               READY   STATUS      RESTARTS   AGE
   participant1-canton-participant-647b99cb8b-dbzrw   1/1     Running     0          15m
