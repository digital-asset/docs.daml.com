{
  "533" : {
    "command" : "val acceptOffer = ledger_api_utils.exercise(\"AcceptByOwner\", Map(\"iouId\" -> LfContractId.assertFromString(aliceIou.event.contractId)),paintOffer.event)",
    "output" : "acceptOffer : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Exercise(\n    value = ExerciseCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n.."
  },
  "288" : {
    "command" : "mydomain.parties.list(\"Bob\")",
    "output" : "res18: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Bob::12209f6201a7...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant2::12209f6201a7...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::122036adf584..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "302" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : ".."
  },
  "371" : {
    "command" : "participant2.dars.list()",
    "output" : "res31: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"1220a93ae982b08002800b9453a968623afcddf938a8afe22bb5ca332419561e7319\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"1220f9fe7fb8b826a76cf9697b18fff947f0ab5b28e2a5acc8ccc4e7e6919e5cc0e3\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "73" : {
    "command" : "Seq(1,2,3).map(_ * 2)",
    "output" : "res1: Seq[Int] = List(2, 4, 6)"
  },
  "513" : {
    "command" : "",
    "output" : ""
  },
  "271" : {
    "command" : "",
    "output" : ""
  },
  "282" : {
    "command" : "",
    "output" : ""
  },
  "175" : {
    "command" : "participant1.health.status",
    "output" : "res6: com.digitalasset.canton.health.admin.data.NodeStatus[com.digitalasset.canton.health.admin.data.ParticipantStatus] = Participant id: PAR::participant1::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\nUptime: 3.489516s\nPorts: \n\tledger: 33498\n\tadmin: 33499\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "365" : {
    "command" : "participant1.dars.list()",
    "output" : "res30: Seq[com.digitalasset.canton.participant.admin.v0.DarDescription] = Vector(\n  DarDescription(\n    hash = \"1220a93ae982b08002800b9453a968623afcddf938a8afe22bb5ca332419561e7319\",\n    name = \"CantonExamples\"\n  ),\n  DarDescription(\n    hash = \"1220f9fe7fb8b826a76cf9697b18fff947f0ab5b28e2a5acc8ccc4e7e6919e5cc0e3\",\n    name = \"AdminWorkflowsWithVacuuming\"\n  )\n)"
  },
  "518" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res45: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  ),\n  (\n    TemplateId(\n      packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"houseOwner\" -> \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\",\n      \"bank\" -> \"Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "352" : {
    "command" : "nodes.local",
    "output" : "res28: Seq[com.digitalasset.canton.console.LocalInstanceReferenceCommon] = ArraySeq(Participant 'participant1', Participant 'participant2', Domain 'mydomain')"
  },
  "170" : {
    "command" : "health.status",
    "output" : "res5: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::122036adf584234de91d05d1d5b9770ac94e757a6d34825e597dedb10c8d733d5dbd\nUptime: 4.510201s\nPorts: \n\tadmin: 33503\n\tpublic: 33502\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\nStatus for Participant 'participant1':\nParticipant id: PAR::participant1::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\nUptime: 3.39523s\nPorts: \n\tledger: 33498\n\tadmin: 33499\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized\n\nStatus for Participant 'participant2':\nParticipant id: PAR::participant2::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\nUptime: 3.444089s\nPorts: \n\tledger: 33500\n\tadmin: 33501\nConnected domains: None\nUnhealthy domains: None\nActive: true\nComponents: \n\tmemory_storage : Ok()\n\tsync-domain : Not Initialized\n\tsync-domain-ephemeral : Not Initialized\n\tsequencer-client : Not Initialized"
  },
  "269" : {
    "command" : "",
    "output" : ""
  },
  "372" : {
    "command" : "",
    "output" : ""
  },
  "357" : {
    "command" : "participants.all",
    "output" : "res29: Seq[com.digitalasset.canton.console.ParticipantReference] = List(Participant 'participant1', Participant 'participant2')"
  },
  "196" : {
    "command" : "participant1.domains.connect_local(mydomain)",
    "output" : ""
  },
  "289" : {
    "command" : "",
    "output" : ""
  },
  "448" : {
    "command" : "participant2.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "res35: com.daml.ledger.api.v1.transaction.TransactionTree = TransactionTree(\n  transactionId = \"12206dabe82d1fdc86f5242f94892c4db51d3e460964acaaf4b802687621bea94b64\",\n  commandId = \"db283d5c-c5f9-4374-920b-e9dcd04e9fbf\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n      seconds = 1703278202L,\n      nanos = 157539000,\n      unknownFields = UnknownFieldSet(fields = Map())\n    )\n  ),\n  offset = \"000000000000000015\",\n.."
  },
  "492" : {
    "command" : "val createOfferCmd = ledger_api_utils.create(pkgPaint.packageId, \"Paint\", \"OfferToPaintHouseByPainter\", Map(\"bank\" -> bank, \"houseOwner\" -> alice, \"painter\" -> bob, \"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\")))",
    "output" : "createOfferCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n.."
  },
  "443" : {
    "command" : "val createIouCmd = ledger_api_utils.create(pkgIou.packageId,\"Iou\",\"Iou\",Map(\"payer\" -> bank,\"owner\" -> alice,\"amount\" -> Map(\"value\" -> 100.0, \"currency\" -> \"EUR\"),\"viewers\" -> List()))",
    "output" : "createIouCmd : com.daml.ledger.api.v1.commands.Command = Command(\n  command = Create(\n    value = CreateCommand(\n      templateId = Some(\n        value = Identifier(\n          packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n.."
  },
  "211" : {
    "command" : "participant1.health.ping(participant2)",
    "output" : "res11: Duration = 610 milliseconds"
  },
  "238" : {
    "command" : "mydomain.id",
    "output" : "res12: DomainId = mydomain::122036adf584..."
  },
  "280" : {
    "command" : "",
    "output" : ""
  },
  "507" : {
    "command" : "",
    "output" : ""
  },
  "312" : {
    "command" : "val p2Id = ParticipantId.tryFromProtoPrimitive(extractedId)",
    "output" : "p2Id : ParticipantId = PAR::participant2::12209f6201a7..."
  },
  "74" : {
    "command" : "",
    "output" : ""
  },
  "307" : {
    "command" : "val extractedId = participant2.id.toProtoPrimitive",
    "output" : "extractedId : String = \"PAR::participant2::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\""
  },
  "512" : {
    "command" : "participant2.ledger_api.acs.of_party(bank).map(x => (x.templateId, x.arguments))",
    "output" : "res44: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "270" : {
    "command" : "val bob = participant2.parties.enable(\"Bob\")",
    "output" : "bob : PartyId = Bob::12209f6201a7..."
  },
  "366" : {
    "command" : "",
    "output" : ""
  },
  "534" : {
    "command" : "participant1.ledger_api.commands.submit_flat(Seq(alice), Seq(acceptOffer))",
    "output" : "res48: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"12208ba2c313c6c7c1dde49c26b4f2b3f066f8400306f8882aeec5f16301161075c5\",\n  commandId = \"8f07619c-7893-417f-87a5-c4a6baa67d7e\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "102" : {
    "command" : "help",
    "output" : "Top-level Commands\n------------------\nexit - Leave the console\nhelp - Help with console commands; type help(\"<command>\") for detailed help for <command>\n\nGeneric Node References\n-----------------------\ndomainManagers - All domain manager nodes (.all, .local, .remote)\n.."
  },
  "197" : {
    "command" : "",
    "output" : ""
  },
  "493" : {
    "command" : "participant2.ledger_api.commands.submit_flat(Seq(bob), Seq(createOfferCmd))",
    "output" : "res41: com.daml.ledger.api.v1.transaction.Transaction = Transaction(\n  transactionId = \"1220ca0b9349d27afa46842eb049c520cc3071e69d51e148a4137a721b9d6f663363\",\n  commandId = \"c8e59d84-7cd2-4201-bb0a-d60cf9d14a05\",\n  workflowId = \"\",\n  effectiveAt = Some(\n    value = Timestamp(\n.."
  },
  "324" : {
    "command" : "",
    "output" : ""
  },
  "519" : {
    "command" : "",
    "output" : ""
  },
  "317" : {
    "command" : "participant1.health.ping(p2Id)",
    "output" : "res22: Duration = 371 milliseconds"
  },
  "176" : {
    "command" : "",
    "output" : ""
  },
  "281" : {
    "command" : "mydomain.parties.list(\"Alice\")",
    "output" : "res17: Seq[ListPartiesResult] = Vector(\n  ListPartiesResult(\n    party = Alice::12208a6f75f9...,\n    participants = Vector(\n      ParticipantDomains(\n        participant = PAR::participant1::12208a6f75f9...,\n        domains = Vector(\n          DomainPermission(domain = mydomain::122036adf584..., permission = Submission)\n        )\n      )\n    )\n  )\n)"
  },
  "204" : {
    "command" : "health.status",
    "output" : "res10: EnterpriseCantonStatus = Status for Domain 'mydomain':\nDomain id: mydomain::122036adf584234de91d05d1d5b9770ac94e757a6d34825e597dedb10c8d733d5dbd\nUptime: 7.457836s\nPorts: \n\tadmin: 33503\n\tpublic: 33502\nConnected Participants: \n\tPAR::participant2::12209f6201a7...\n\tPAR::participant1::12208a6f75f9...\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()\n\n.."
  },
  "498" : {
    "command" : "val paintOffer = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Paint\", \"OfferToPaintHouseByPainter\"))",
    "output" : "paintOffer : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#1220ca0b9349d27afa46842eb049c520cc3071e69d51e148a4137a721b9d6f663363:0\",\n    contractId = \"009188d53e23d963c1aa95d83290e77f2358bc5da21cb6984c3633a292f731523dca021220fecfe93db1b3a48c9e7f4fbd895d155edae3ce5f044e32bef3e32d099eebdd1e\",\n    templateId = Some(\n      value = Identifier(\n.."
  },
  "181" : {
    "command" : "mydomain.health.status",
    "output" : "res7: com.digitalasset.canton.health.admin.data.NodeStatus[mydomain.Status] = Domain id: mydomain::122036adf584234de91d05d1d5b9770ac94e757a6d34825e597dedb10c8d733d5dbd\nUptime: 4.794302s\nPorts: \n\tadmin: 33503\n\tpublic: 33502\nConnected Participants: None\nSequencer: SequencerHealthStatus(active = true)\nComponents: \n\tsequencer : Ok()\n\tmemory_storage : Ok()\n\tdomain-topology-sender : Ok()"
  },
  "477" : {
    "command" : "participant1.ledger_api.acs.of_party(alice).map(x => (x.templateId, x.arguments))",
    "output" : "res38: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n      moduleName = \"Iou\",\n      entityName = \"Iou\"\n    ),\n    HashMap(\n      \"payer\" -> \"Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"viewers\" -> List(elements = Vector()),\n      \"owner\" -> \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "323" : {
    "command" : "val aliceParsed = PartyId.tryFromProtoPrimitive(aliceAsStr)",
    "output" : "aliceParsed : PartyId = Alice::12208a6f75f9..."
  },
  "483" : {
    "command" : "val pkgPaint = participant1.packages.find(\"Paint\").head",
    "output" : "pkgPaint : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "240" : {
    "command" : "participant2.id",
    "output" : "res14: ParticipantId = PAR::participant2::12209f6201a7..."
  },
  "198" : {
    "command" : "participant2.domains.connect_local(mydomain)",
    "output" : ""
  },
  "108" : {
    "command" : "participant1.help(\"start\")",
    "output" : "start\nStart the instance"
  },
  "330" : {
    "command" : "val p2UidString = participant2.id.uid.toProtoPrimitive",
    "output" : "p2UidString : String = \"participant2::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\""
  },
  "394" : {
    "command" : "val bank = participant2.parties.enable(\"Bank\", waitForDomain = DomainChoice.All)",
    "output" : "bank : PartyId = Bank::12209f6201a7..."
  },
  "438" : {
    "command" : "val pkgIou = participant1.packages.find(\"Iou\").head",
    "output" : "pkgIou : com.digitalasset.canton.participant.admin.v0.PackageDescription = PackageDescription(\n  packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n  sourceDescription = \"CantonExamples\"\n)"
  },
  "199" : {
    "command" : "",
    "output" : ""
  },
  "182" : {
    "command" : "",
    "output" : ""
  },
  "331" : {
    "command" : "val p2FromUid = ParticipantId(UniqueIdentifier.tryFromProtoPrimitive(p2UidString))",
    "output" : "p2FromUid : ParticipantId = PAR::participant2::12209f6201a7..."
  },
  "346" : {
    "command" : "participants.all.dars.upload(\"dars/CantonExamples.dar\")",
    "output" : "res27: Map[com.digitalasset.canton.console.ParticipantReference, String] = Map(\n  Participant 'participant1' -> \"1220a93ae982b08002800b9453a968623afcddf938a8afe22bb5ca332419561e7319\",\n  Participant 'participant2' -> \"1220a93ae982b08002800b9453a968623afcddf938a8afe22bb5ca332419561e7319\"\n)"
  },
  "287" : {
    "command" : "",
    "output" : ""
  },
  "210" : {
    "command" : "",
    "output" : ""
  },
  "107" : {
    "command" : "help(\"participant1\")",
    "output" : "participant1\nManage participant 'participant1'; type 'participant1 help' or 'participant1 help(\"<methodName>\")' for more help"
  },
  "239" : {
    "command" : "participant1.id",
    "output" : "res13: ParticipantId = PAR::participant1::12208a6f75f9..."
  },
  "532" : {
    "command" : "import com.digitalasset.canton.protocol.LfContractId",
    "output" : ""
  },
  "506" : {
    "command" : "participant2.ledger_api.acs.of_party(bob).map(x => (x.templateId, x.arguments))",
    "output" : "res43: Seq[(TemplateId, Map[String, Any])] = List(\n  (\n    TemplateId(\n      packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n      moduleName = \"Paint\",\n      entityName = \"OfferToPaintHouseByPainter\"\n    ),\n    HashMap(\n      \"painter\" -> \"Bob::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"houseOwner\" -> \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\",\n      \"bank\" -> \"Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19\",\n      \"amount.currency\" -> \"EUR\",\n      \"amount.value\" -> \"100.0000000000\"\n    )\n  )\n)"
  },
  "268" : {
    "command" : "val alice = participant1.parties.enable(\"Alice\")",
    "output" : "alice : PartyId = Alice::12208a6f75f9..."
  },
  "464" : {
    "command" : "val aliceIou = participant1.ledger_api.acs.find_generic(alice, _.templateId.isModuleEntity(\"Iou\", \"Iou\"))",
    "output" : "aliceIou : com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent = WrappedCreatedEvent(\n  event = CreatedEvent(\n    eventId = \"#12206dabe82d1fdc86f5242f94892c4db51d3e460964acaaf4b802687621bea94b64:0\",\n    contractId = \"005091a24233f4436bc056202027f4c57617d27afd63df0b3ffdb6806c16fb2afaca02122081767b94f054d3bfa1a22530ac1ef85d2f65f8f3c2de2065ee1959ad10ea1ca7\",\n.."
  },
  "459" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(bank), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcRequestRefusedByServer: NOT_FOUND/NO_DOMAIN_ON_WHICH_ALL_SUBMITTERS_CAN_SUBMIT(11,03aef4e3): This participant can not submit as the given submitter on any connected domain\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Bank::12209f6201a7...,\n.."
  },
  "322" : {
    "command" : "val aliceAsStr = alice.toProtoPrimitive",
    "output" : "aliceAsStr : String = \"Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c\""
  },
  "469" : {
    "command" : "participant1.ledger_api.acs.of_party(alice)",
    "output" : "res37: Seq[com.digitalasset.canton.admin.api.client.commands.LedgerApiTypeWrappers.WrappedCreatedEvent] = List(\n  WrappedCreatedEvent(\n    event = CreatedEvent(\n      eventId = \"#12206dabe82d1fdc86f5242f94892c4db51d3e460964acaaf4b802687621bea94b64:0\",\n      contractId = \"005091a24233f4436bc056202027f4c57617d27afd63df0b3ffdb6806c16fb2afaca02122081767b94f054d3bfa1a22530ac1ef85d2f65f8f3c2de2065ee1959ad10ea1ca7\",\n      templateId = Some(\n        value = Identifier(\n          packageId = \"8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c\",\n.."
  },
  "454" : {
    "command" : "participant1.ledger_api.commands.submit(Seq(alice), Seq(createIouCmd))",
    "output" : "ERROR com.digitalasset.canton.integration.EnterpriseEnvironmentDefinition$$anon$3 - Request failed for participant1.\n  GrpcClientError: INVALID_ARGUMENT/DAML_AUTHORIZATION_ERROR(8,1c141eb8): Interpretation error: Error: node NodeId(0) (8fab9ddc10d913445c30515b8b40fd5332575790d86480c31f96b2ffcb4c2a8c:Iou:Iou) requires authorizers Bank::12209f6201a7d0151447d97f0754ebf49ce39581af04704af668b7db1d1fe0a65c19, but only Alice::12208a6f75f95818e255bbfd7381dab368045a5744ba62f1425ab6eaa021e5a2301c were given\n  Request: SubmitAndWaitTransactionTree(\n  actAs = Alice::12208a6f75f9...,\n.."
  }
}