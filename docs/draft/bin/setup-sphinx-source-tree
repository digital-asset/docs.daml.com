#!/usr/bin/env bash
# Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

set -eou pipefail

DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

RELEASE_TAG=$(jq -r '.daml' $DIR/../versions.json)
CANTON_RELEASE_TAG=$(jq -r '.canton' $DIR/../versions.json)
DOWNLOAD_DIR=$DIR/../workdir/downloads
SPHINX_DIR=$DIR/../workdir/build/source

prefix=$(basename $(realpath $DIR/..))

mkdir -p $SPHINX_DIR/source/canton $SPHINX_DIR/source/daml-finance $SPHINX_DIR/source/canton-drivers
tar xf $DOWNLOAD_DIR/sphinx-source-tree-$RELEASE_TAG.tar.gz -C $SPHINX_DIR --strip-components=1
if [ -d $SPHINX_DIR/theme ]; then
  rm -rf $SPHINX_DIR/theme
fi
(
  cd $DIR/../../../theme
  ./build.sh
  cp -r . $SPHINX_DIR/theme
  sed -i "s|'index_page_boxes': True|'index_page_boxes': False|" $SPHINX_DIR/configs/html/conf.py
  sed -i "s|'pdf_download': True|'pdf_download': False|" $SPHINX_DIR/configs/html/conf.py
)

tar xf $DOWNLOAD_DIR/canton-doc-sources-$CANTON_RELEASE_TAG.tar.gz -C $SPHINX_DIR/source/canton ./includes # only extract the includes folder

if [ -d $DIR/../docs/canton ]; then
  cp -r $DIR/../docs/canton/* $SPHINX_DIR/source/canton
fi
cp $SPHINX_DIR/source/canton/exts/canton_enterprise_only.py $SPHINX_DIR/configs/static/

# Rewrite Canton's absolute references.
find $SPHINX_DIR/source/canton -type f -print0 | while IFS= read -r -d '' file
do
    sed -i "s|__VERSION__|$prefix|g" $file
done

sed -i "s/'sphinx.ext.extlinks',$/'sphinx.ext.extlinks','canton_enterprise_only','sphinx.ext.todo','sphinx_external_toc','sphinxext.remoteliteralinclude',/g" $SPHINX_DIR/configs/html/conf.py
sed -i "s/'sphinx.ext.extlinks'$/'sphinx.ext.extlinks','canton_enterprise_only','sphinx.ext.todo','sphinx_external_toc','sphinxext.remoteliteralinclude'/g" $SPHINX_DIR/configs/pdf/conf.py

# Setting version number
for var in version release; do
  sed -i "s|$var = u'.*'|$var = u'$prefix'|" $SPHINX_DIR/configs/html/conf.py
done

# Disable all ToCs
find $SPHINX_DIR/source -type f -name '*.rst' -print0 | while IFS= read -r -d '' file
do
    sed -i 's|.. toctree|.. .. toctree|g' $file
done

# DRAFT ONLY
(
rm -rf $SPHINX_DIR/source
)

# Creates hard links to docs files; effectively overriding any existing file in the sphinx source directory
for f in $(cd $DIR/../docs; find . -type f); do
    if [[ $(dirname $f) != "./canton/"* ]]; then  # TODO exclude canton so that the preprocessing from before does not get overridden again
      mkdir -p $SPHINX_DIR/source/$(dirname $f)
      rm -f $SPHINX_DIR/source/$f
      ln $DIR/../docs/$f $SPHINX_DIR/source/$f
    fi
done

# Copy ToC
rm -f $SPHINX_DIR/source/_toc.yml
ln $DIR/../_toc.yml $SPHINX_DIR/source/_toc.yml

# Process canton snippet directives
python $DIR/canton/snippet_directive.py $SPHINX_DIR/source/canton/includes/snippet_data $SPHINX_DIR/source/canton
